// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/get_user_info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает полную информацию о пользователе по его ID. Доступно только для администраторов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Получить информацию о пользователе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Полная информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/bind_telegram": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Привязывает Telegram username к пользователю.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "telegram"
                ],
                "summary": "Привязать Telegram-бота",
                "parameters": [
                    {
                        "description": "Данные Telegram",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandler.BindTelegramData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Telegram username успешно привязан",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный запрос",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/change_psw": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Изменяет пароль пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Изменить пароль",
                "parameters": [
                    {
                        "description": "Новый пароль пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandler.ChangePswReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменен",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/confirm_telegram_code": {
            "post": {
                "description": "Подтверждает код авторизации из Telegram и возвращает токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "telegram"
                ],
                "summary": "Подтверждение кода Telegram",
                "parameters": [
                    {
                        "description": "Telegram username и код",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandler.ConfirmTelegramCodeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httphandler.HTTPResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный код авторизации",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/get_user_info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает короткую информацию о пользователе на основе его ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить информацию о пользователе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httphandler.HTTPResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.UserInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/login_with_telegram": {
            "post": {
                "description": "Отправляет код авторизации в Telegram чат пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "telegram"
                ],
                "summary": "Вход с помощью Telegram",
                "parameters": [
                    {
                        "description": "Telegram username",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandler.LoginWithTelegramData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Код отправлен в Telegram чат",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Простая проверка доступности сервиса. Возвращает строку \"pong\".",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Пинг-сервис",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/set_user_info": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о пользователе (имя).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновить информацию о пользователе",
                "parameters": [
                    {
                        "description": "Информация о пользователе",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandler.SetUserInfoReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/sign_in": {
            "post": {
                "description": "Авторизует пользователя и возвращает токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Логин и пароль",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httphandler.HTTPResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/sign_up": {
            "post": {
                "description": "Регистрирует нового пользователя и возвращает токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Логин и пароль",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httphandler.HTTPResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неправильные входные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/httphandler.HTTPResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.LoginPassword": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "auth_code": {
                    "type": "string"
                },
                "auth_code_time": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "telegram_chat_id": {
                    "type": "integer"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "domain.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telegram_user_chat_id": {
                    "type": "integer"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "httphandler.BindTelegramData": {
            "type": "object",
            "properties": {
                "telegram_username": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "httphandler.ChangePswReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "httphandler.ConfirmTelegramCodeData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "httphandler.HTTPResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httphandler.LoginWithTelegramData": {
            "type": "object",
            "properties": {
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "httphandler.SetUserInfoReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
